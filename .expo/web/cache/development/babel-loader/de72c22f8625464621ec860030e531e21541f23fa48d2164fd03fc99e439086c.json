{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { create } from 'zustand';\nimport { EntryRepository } from \"../data/repositories\";\nexport var useEntryStore = create(function (set, get) {\n  return {\n    entries: [],\n    currentBookId: null,\n    loading: false,\n    editingEntry: null,\n    loadEntries: function () {\n      var _loadEntries = _asyncToGenerator(function* (bookId) {\n        set({\n          loading: true,\n          currentBookId: bookId\n        });\n        try {\n          var entries = yield EntryRepository.getByBookId(bookId);\n          set({\n            entries: entries,\n            loading: false\n          });\n        } catch (error) {\n          console.error('Failed to load entries:', error);\n          set({\n            loading: false\n          });\n        }\n      });\n      function loadEntries(_x) {\n        return _loadEntries.apply(this, arguments);\n      }\n      return loadEntries;\n    }(),\n    addEntry: function () {\n      var _addEntry = _asyncToGenerator(function* (entry) {\n        try {\n          yield EntryRepository.create(entry);\n          var _get = get(),\n            currentBookId = _get.currentBookId;\n          if (currentBookId) {\n            yield get().loadEntries(currentBookId);\n          }\n        } catch (error) {\n          console.error('Failed to add entry:', error);\n          throw error;\n        }\n      });\n      function addEntry(_x2) {\n        return _addEntry.apply(this, arguments);\n      }\n      return addEntry;\n    }(),\n    updateEntry: function () {\n      var _updateEntry = _asyncToGenerator(function* (id, updates) {\n        try {\n          yield EntryRepository.update(id, updates);\n          var _get2 = get(),\n            currentBookId = _get2.currentBookId;\n          if (currentBookId) {\n            yield get().loadEntries(currentBookId);\n          }\n        } catch (error) {\n          console.error('Failed to update entry:', error);\n          throw error;\n        }\n      });\n      function updateEntry(_x3, _x4) {\n        return _updateEntry.apply(this, arguments);\n      }\n      return updateEntry;\n    }(),\n    deleteEntry: function () {\n      var _deleteEntry = _asyncToGenerator(function* (id) {\n        try {\n          yield EntryRepository.delete(id);\n          var _get3 = get(),\n            currentBookId = _get3.currentBookId;\n          if (currentBookId) {\n            yield get().loadEntries(currentBookId);\n          }\n        } catch (error) {\n          console.error('Failed to delete entry:', error);\n          throw error;\n        }\n      });\n      function deleteEntry(_x5) {\n        return _deleteEntry.apply(this, arguments);\n      }\n      return deleteEntry;\n    }(),\n    setEditingEntry: function setEditingEntry(entry) {\n      set({\n        editingEntry: entry\n      });\n    },\n    clearEntries: function clearEntries() {\n      set({\n        entries: [],\n        currentBookId: null,\n        editingEntry: null\n      });\n    }\n  };\n});","map":{"version":3,"names":["create","EntryRepository","useEntryStore","set","get","entries","currentBookId","loading","editingEntry","loadEntries","_loadEntries","_asyncToGenerator","bookId","getByBookId","error","console","_x","apply","arguments","addEntry","_addEntry","entry","_get","_x2","updateEntry","_updateEntry","id","updates","update","_get2","_x3","_x4","deleteEntry","_deleteEntry","delete","_get3","_x5","setEditingEntry","clearEntries"],"sources":["C:/workspace/gong/app/store/useEntries.ts"],"sourcesContent":["import { create } from 'zustand';\r\nimport { Entry } from '../data/types';\r\nimport { EntryRepository } from '../data/repositories';\r\n\r\ninterface EntryStore {\r\n  entries: Entry[];\r\n  currentBookId: string | null;\r\n  loading: boolean;\r\n  editingEntry: Entry | null;\r\n  \r\n  loadEntries: (bookId: string) => Promise<void>;\r\n  addEntry: (entry: Omit<Entry, 'id' | 'created_at'>) => Promise<void>;\r\n  updateEntry: (id: string, updates: Partial<Entry>) => Promise<void>;\r\n  deleteEntry: (id: string) => Promise<void>;\r\n  setEditingEntry: (entry: Entry | null) => void;\r\n  clearEntries: () => void;\r\n}\r\n\r\nexport const useEntryStore = create<EntryStore>((set, get) => ({\r\n  entries: [],\r\n  currentBookId: null,\r\n  loading: false,\r\n  editingEntry: null,\r\n\r\n  loadEntries: async (bookId) => {\r\n    set({ loading: true, currentBookId: bookId });\r\n    try {\r\n      const entries = await EntryRepository.getByBookId(bookId);\r\n      set({ entries, loading: false });\r\n    } catch (error) {\r\n      console.error('Failed to load entries:', error);\r\n      set({ loading: false });\r\n    }\r\n  },\r\n\r\n  addEntry: async (entry) => {\r\n    try {\r\n      await EntryRepository.create(entry);\r\n      const { currentBookId } = get();\r\n      if (currentBookId) {\r\n        await get().loadEntries(currentBookId);\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to add entry:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  updateEntry: async (id, updates) => {\r\n    try {\r\n      await EntryRepository.update(id, updates);\r\n      const { currentBookId } = get();\r\n      if (currentBookId) {\r\n        await get().loadEntries(currentBookId);\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to update entry:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  deleteEntry: async (id) => {\r\n    try {\r\n      await EntryRepository.delete(id);\r\n      const { currentBookId } = get();\r\n      if (currentBookId) {\r\n        await get().loadEntries(currentBookId);\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to delete entry:', error);\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  setEditingEntry: (entry) => {\r\n    set({ editingEntry: entry });\r\n  },\r\n\r\n  clearEntries: () => {\r\n    set({ entries: [], currentBookId: null, editingEntry: null });\r\n  }\r\n}));"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}