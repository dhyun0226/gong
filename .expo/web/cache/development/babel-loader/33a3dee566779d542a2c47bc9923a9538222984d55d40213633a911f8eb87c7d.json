{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect } from 'react';\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { initDatabase } from \"./app/data/db\";\nimport { useSettingsStore } from \"./app/store/useSettings\";\nimport { colors } from \"./app/theme/colors\";\nimport { Home } from \"./app/screens/Home\";\nimport { NewBook } from \"./app/screens/NewBook\";\nimport { BookDetail } from \"./app/screens/BookDetail\";\nimport { EditEntryModal } from \"./app/screens/EditEntryModal\";\nimport { Settings } from \"./app/screens/Settings\";\nimport { MonthlySummary } from \"./app/screens/MonthlySummary\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nvar LoadingScreen = function LoadingScreen() {\n  return _jsx(View, {\n    style: styles.loadingContainer,\n    children: _jsx(ActivityIndicator, {\n      size: \"large\",\n      color: colors.text\n    })\n  });\n};\nexport default function App() {\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    isReady = _React$useState2[0],\n    setIsReady = _React$useState2[1];\n  var _useSettingsStore = useSettingsStore(),\n    loadSettings = _useSettingsStore.loadSettings;\n  useEffect(function () {\n    var initialize = function () {\n      var _ref = _asyncToGenerator(function* () {\n        try {\n          yield initDatabase();\n          yield loadSettings();\n          setIsReady(true);\n        } catch (error) {\n          console.error('Failed to initialize app:', error);\n          setIsReady(true);\n        }\n      });\n      return function initialize() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    initialize();\n  }, []);\n  if (!isReady) {\n    return _jsx(LoadingScreen, {});\n  }\n  return _jsxs(SafeAreaProvider, {\n    children: [_jsx(StatusBar, {\n      barStyle: \"light-content\",\n      backgroundColor: colors.background\n    }), _jsx(NavigationContainer, {\n      children: _jsxs(Stack.Navigator, {\n        screenOptions: {\n          headerShown: false,\n          contentStyle: {\n            backgroundColor: colors.background\n          },\n          animation: 'fade'\n        },\n        children: [_jsx(Stack.Screen, {\n          name: \"Home\",\n          component: Home\n        }), _jsx(Stack.Screen, {\n          name: \"NewBook\",\n          component: NewBook,\n          options: {\n            presentation: 'modal',\n            animation: 'slide_from_bottom'\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"BookDetail\",\n          component: BookDetail\n        }), _jsx(Stack.Screen, {\n          name: \"EditEntryModal\",\n          component: EditEntryModal,\n          options: {\n            presentation: 'modal',\n            animation: 'slide_from_bottom'\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"Settings\",\n          component: Settings\n        }), _jsx(Stack.Screen, {\n          name: \"MonthlySummary\",\n          component: MonthlySummary\n        })]\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: colors.background\n  }\n});","map":{"version":3,"names":["React","useEffect","StatusBar","View","ActivityIndicator","StyleSheet","NavigationContainer","createNativeStackNavigator","SafeAreaProvider","initDatabase","useSettingsStore","colors","Home","NewBook","BookDetail","EditEntryModal","Settings","MonthlySummary","jsx","_jsx","jsxs","_jsxs","Stack","LoadingScreen","style","styles","loadingContainer","children","size","color","text","App","_React$useState","useState","_React$useState2","_slicedToArray","isReady","setIsReady","_useSettingsStore","loadSettings","initialize","_ref","_asyncToGenerator","error","console","apply","arguments","barStyle","backgroundColor","background","Navigator","screenOptions","headerShown","contentStyle","animation","Screen","name","component","options","presentation","create","flex","justifyContent","alignItems"],"sources":["C:/workspace/gong/App.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { StatusBar, View, ActivityIndicator, StyleSheet } from 'react-native';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\r\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\r\n\r\nimport { initDatabase } from './app/data/db';\r\nimport { useSettingsStore } from './app/store/useSettings';\r\nimport { colors } from './app/theme/colors';\r\n\r\nimport { Home } from './app/screens/Home';\r\nimport { NewBook } from './app/screens/NewBook';\r\nimport { BookDetail } from './app/screens/BookDetail';\r\nimport { EditEntryModal } from './app/screens/EditEntryModal';\r\nimport { Settings } from './app/screens/Settings';\r\nimport { MonthlySummary } from './app/screens/MonthlySummary';\r\n\r\nexport type RootStackParamList = {\r\n  Home: undefined;\r\n  NewBook: undefined;\r\n  BookDetail: { bookId: string };\r\n  EditEntryModal: { bookId: string; entry?: any };\r\n  Settings: undefined;\r\n  MonthlySummary: undefined;\r\n};\r\n\r\nconst Stack = createNativeStackNavigator<RootStackParamList>();\r\n\r\nconst LoadingScreen = () => (\r\n  <View style={styles.loadingContainer}>\r\n    <ActivityIndicator size=\"large\" color={colors.text} />\r\n  </View>\r\n);\r\n\r\nexport default function App() {\r\n  const [isReady, setIsReady] = React.useState(false);\r\n  const { loadSettings } = useSettingsStore();\r\n\r\n  useEffect(() => {\r\n    const initialize = async () => {\r\n      try {\r\n        await initDatabase();\r\n        await loadSettings();\r\n        \r\n        \r\n        setIsReady(true);\r\n      } catch (error) {\r\n        console.error('Failed to initialize app:', error);\r\n        setIsReady(true);\r\n      }\r\n    };\r\n\r\n    initialize();\r\n  }, []);\r\n\r\n  if (!isReady) {\r\n    return <LoadingScreen />;\r\n  }\r\n\r\n  return (\r\n    <SafeAreaProvider>\r\n      <StatusBar \r\n        barStyle=\"light-content\" \r\n        backgroundColor={colors.background} \r\n      />\r\n      <NavigationContainer>\r\n        <Stack.Navigator\r\n          screenOptions={{\r\n            headerShown: false,\r\n            contentStyle: { backgroundColor: colors.background },\r\n            animation: 'fade',\r\n          }}\r\n        >\r\n          <Stack.Screen name=\"Home\" component={Home} />\r\n          <Stack.Screen \r\n            name=\"NewBook\" \r\n            component={NewBook}\r\n            options={{\r\n              presentation: 'modal',\r\n              animation: 'slide_from_bottom',\r\n            }}\r\n          />\r\n          <Stack.Screen name=\"BookDetail\" component={BookDetail} />\r\n          <Stack.Screen \r\n            name=\"EditEntryModal\" \r\n            component={EditEntryModal}\r\n            options={{\r\n              presentation: 'modal',\r\n              animation: 'slide_from_bottom',\r\n            }}\r\n          />\r\n          <Stack.Screen name=\"Settings\" component={Settings} />\r\n          <Stack.Screen name=\"MonthlySummary\" component={MonthlySummary} />\r\n        </Stack.Navigator>\r\n      </NavigationContainer>\r\n    </SafeAreaProvider>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  loadingContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    backgroundColor: colors.background,\r\n  },\r\n});"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}