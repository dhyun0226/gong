{"ast":null,"code":"import React, { useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useNavigation } from '@react-navigation/native';\nimport { TopBar } from \"../components/TopBar\";\nimport { DiscList } from \"../components/DiscList\";\nimport { useBookStore } from \"../store/useBooks\";\nimport { colors } from \"../theme/colors\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var Home = function Home() {\n  var navigation = useNavigation();\n  var _useBookStore = useBookStore(),\n    books = _useBookStore.books,\n    loadBooks = _useBookStore.loadBooks;\n  useEffect(function () {\n    loadBooks();\n  }, []);\n  var handleBookPress = function handleBookPress(book) {\n    navigation.navigate('BookDetail', {\n      bookId: book.id\n    });\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(TopBar, {\n      leftIcon: \"settings-outline\",\n      rightIcon: \"add\",\n      onLeftPress: function onLeftPress() {\n        return navigation.navigate('Settings');\n      },\n      onRightPress: function onRightPress() {\n        return navigation.navigate('NewBook');\n      },\n      centerContent: _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.navigate('MonthlySummary');\n        },\n        children: _jsx(Text, {\n          style: styles.monthlyIcon,\n          children: \"\\uD83D\\uDCC5\"\n        })\n      })\n    }), books.length === 0 ? _jsxs(View, {\n      style: styles.emptyContainer,\n      children: [_jsx(Text, {\n        style: styles.emptyText,\n        children: \"\\uC544\\uC9C1 \\uB4F1\\uB85D\\uB41C \\uCC45\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4\"\n      }), _jsx(Text, {\n        style: styles.emptySubtext,\n        children: \"\\uC6B0\\uCE21 \\uC0C1\\uB2E8 + \\uBC84\\uD2BC\\uC73C\\uB85C \\uC0C8 \\uCC45\\uC744 \\uCD94\\uAC00\\uD558\\uC138\\uC694\"\n      })]\n    }) : _jsx(DiscList, {\n      books: books,\n      onItemPress: handleBookPress\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: colors.background\n  },\n  emptyContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingHorizontal: 32\n  },\n  emptyText: {\n    fontSize: 18,\n    color: colors.text,\n    marginBottom: 8\n  },\n  emptySubtext: {\n    fontSize: 14,\n    color: colors.textDimmed,\n    textAlign: 'center'\n  },\n  monthlyIcon: {\n    fontSize: 20\n  }\n});","map":{"version":3,"names":["React","useEffect","View","StyleSheet","Text","TouchableOpacity","useNavigation","TopBar","DiscList","useBookStore","colors","jsx","_jsx","jsxs","_jsxs","Home","navigation","_useBookStore","books","loadBooks","handleBookPress","book","navigate","bookId","id","style","styles","container","children","leftIcon","rightIcon","onLeftPress","onRightPress","centerContent","onPress","monthlyIcon","length","emptyContainer","emptyText","emptySubtext","onItemPress","create","flex","backgroundColor","background","justifyContent","alignItems","paddingHorizontal","fontSize","color","text","marginBottom","textDimmed","textAlign"],"sources":["C:/workspace/gong/app/screens/Home.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { View, StyleSheet, Text, TouchableOpacity } from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { NativeStackNavigationProp } from '@react-navigation/native-stack';\r\nimport { TopBar } from '../components/TopBar';\r\nimport { DiscList } from '../components/DiscList';\r\nimport { useBookStore } from '../store/useBooks';\r\nimport { colors } from '../theme/colors';\r\n\r\ntype RootStackParamList = {\r\n  Home: undefined;\r\n  NewBook: undefined;\r\n  BookDetail: { bookId: string };\r\n  Settings: undefined;\r\n  MonthlySummary: undefined;\r\n};\r\n\r\ntype HomeScreenNavigationProp = NativeStackNavigationProp<RootStackParamList, 'Home'>;\r\n\r\nexport const Home: React.FC = () => {\r\n  const navigation = useNavigation<HomeScreenNavigationProp>();\r\n  const { books, loadBooks } = useBookStore();\r\n\r\n  useEffect(() => {\r\n    loadBooks();\r\n  }, []);\r\n\r\n  const handleBookPress = (book: any) => {\r\n    navigation.navigate('BookDetail', { bookId: book.id });\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <TopBar\r\n        leftIcon=\"settings-outline\"\r\n        rightIcon=\"add\"\r\n        onLeftPress={() => navigation.navigate('Settings')}\r\n        onRightPress={() => navigation.navigate('NewBook')}\r\n        centerContent={\r\n          <TouchableOpacity onPress={() => navigation.navigate('MonthlySummary')}>\r\n            <Text style={styles.monthlyIcon}>üìÖ</Text>\r\n          </TouchableOpacity>\r\n        }\r\n      />\r\n      \r\n      {books.length === 0 ? (\r\n        <View style={styles.emptyContainer}>\r\n          <Text style={styles.emptyText}>\r\n            ÏïÑÏßÅ Îì±Î°ùÎêú Ï±ÖÏù¥ ÏóÜÏäµÎãàÎã§\r\n          </Text>\r\n          <Text style={styles.emptySubtext}>\r\n            Ïö∞Ï∏° ÏÉÅÎã® + Î≤ÑÌäºÏúºÎ°ú ÏÉà Ï±ÖÏùÑ Ï∂îÍ∞ÄÌïòÏÑ∏Ïöî\r\n          </Text>\r\n        </View>\r\n      ) : (\r\n        <DiscList books={books} onItemPress={handleBookPress} />\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: colors.background,\r\n  },\r\n  emptyContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    paddingHorizontal: 32,\r\n  },\r\n  emptyText: {\r\n    fontSize: 18,\r\n    color: colors.text,\r\n    marginBottom: 8,\r\n  },\r\n  emptySubtext: {\r\n    fontSize: 14,\r\n    color: colors.textDimmed,\r\n    textAlign: 'center',\r\n  },\r\n  monthlyIcon: {\r\n    fontSize: 20,\r\n  },\r\n});"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}