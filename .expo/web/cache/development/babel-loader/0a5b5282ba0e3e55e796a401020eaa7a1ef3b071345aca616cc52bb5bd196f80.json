{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { useNavigation, useRoute } from '@react-navigation/native';\nimport { TopBar } from \"../components/TopBar\";\nimport { FormField } from \"../components/FormField\";\nimport { useEntryStore } from \"../store/useEntries\";\nimport { colors } from \"../theme/colors\";\nimport { parsePage } from \"../data/parsePage\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var EditEntryModal = function EditEntryModal() {\n  var navigation = useNavigation();\n  var route = useRoute();\n  var _route$params = route.params,\n    bookId = _route$params.bookId,\n    entry = _route$params.entry;\n  var _useEntryStore = useEntryStore(),\n    addEntry = _useEntryStore.addEntry,\n    updateEntry = _useEntryStore.updateEntry;\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    pageInput = _useState2[0],\n    setPageInput = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    text = _useState4[0],\n    setText = _useState4[1];\n  var _useState5 = useState({}),\n    _useState6 = _slicedToArray(_useState5, 2),\n    errors = _useState6[0],\n    setErrors = _useState6[1];\n  useEffect(function () {\n    if (entry) {\n      if (entry.page_start === entry.page_end) {\n        setPageInput(entry.page_start.toString());\n      } else {\n        setPageInput(`${entry.page_start}-${entry.page_end}`);\n      }\n      setText(entry.text);\n    }\n  }, [entry]);\n  var validate = function validate() {\n    var newErrors = {};\n    var pageRange = parsePage(pageInput);\n    if (!pageRange) {\n      newErrors.page = '페이지는 숫자 또는 범위(예: 19-20)로 입력해 주세요';\n    }\n    if (!text.trim()) {\n      newErrors.text = '내용을 입력해주세요';\n    }\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n  var handleSave = function () {\n    var _ref = _asyncToGenerator(function* () {\n      if (!validate()) return;\n      var pageRange = parsePage(pageInput);\n      if (!pageRange) return;\n      try {\n        if (entry) {\n          yield updateEntry(entry.id, {\n            page_start: pageRange.start,\n            page_end: pageRange.end,\n            text: text.trim()\n          });\n        } else {\n          yield addEntry({\n            book_id: bookId,\n            page_start: pageRange.start,\n            page_end: pageRange.end,\n            text: text.trim()\n          });\n        }\n        navigation.goBack();\n      } catch (error) {\n        Alert.alert('오류', '저장에 실패했습니다');\n      }\n    });\n    return function handleSave() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var isValid = parsePage(pageInput) !== null && text.trim().length > 0;\n  return _jsxs(KeyboardAvoidingView, {\n    style: styles.container,\n    behavior: Platform.OS === 'ios' ? 'padding' : 'height',\n    children: [_jsx(TopBar, {\n      title: entry ? '모음 수정' : '새 모음',\n      leftIcon: \"close\",\n      rightIcon: isValid ? \"checkmark\" : undefined,\n      onLeftPress: function onLeftPress() {\n        return navigation.goBack();\n      },\n      onRightPress: isValid ? handleSave : undefined\n    }), _jsxs(ScrollView, {\n      style: styles.content,\n      children: [_jsx(FormField, {\n        label: \"\\uD398\\uC774\\uC9C0\",\n        value: pageInput,\n        onChangeText: setPageInput,\n        error: errors.page,\n        placeholder: \"16 \\uB610\\uB294 19-20\",\n        keyboardType: \"numeric\"\n      }), _jsx(FormField, {\n        label: \"\\uB0B4\\uC6A9\",\n        value: text,\n        onChangeText: setText,\n        error: errors.text,\n        placeholder: \"\\uC774 \\uBD80\\uBD84\\uC5D0\\uC11C \\uB290\\uB080 \\uC810...\",\n        multiline: true,\n        numberOfLines: 8\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: colors.background\n  },\n  content: {\n    flex: 1,\n    padding: 20\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","ScrollView","StyleSheet","Alert","KeyboardAvoidingView","Platform","useNavigation","useRoute","TopBar","FormField","useEntryStore","colors","parsePage","jsx","_jsx","jsxs","_jsxs","EditEntryModal","navigation","route","_route$params","params","bookId","entry","_useEntryStore","addEntry","updateEntry","_useState","_useState2","_slicedToArray","pageInput","setPageInput","_useState3","_useState4","text","setText","_useState5","_useState6","errors","setErrors","page_start","page_end","toString","validate","newErrors","pageRange","page","trim","Object","keys","length","handleSave","_ref","_asyncToGenerator","id","start","end","book_id","goBack","error","alert","apply","arguments","isValid","style","styles","container","behavior","OS","children","title","leftIcon","rightIcon","undefined","onLeftPress","onRightPress","content","label","value","onChangeText","placeholder","keyboardType","multiline","numberOfLines","create","flex","backgroundColor","background","padding"],"sources":["C:/workspace/gong/app/screens/EditEntryModal.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  View,\r\n  ScrollView,\r\n  StyleSheet,\r\n  Alert,\r\n  KeyboardAvoidingView,\r\n  Platform,\r\n} from 'react-native';\r\nimport { useNavigation, useRoute, RouteProp } from '@react-navigation/native';\r\nimport { NativeStackNavigationProp } from '@react-navigation/native-stack';\r\nimport { TopBar } from '../components/TopBar';\r\nimport { FormField } from '../components/FormField';\r\nimport { useEntryStore } from '../store/useEntries';\r\nimport { colors } from '../theme/colors';\r\nimport { parsePage } from '../data/parsePage';\r\nimport { Entry } from '../data/types';\r\n\r\ntype RootStackParamList = {\r\n  EditEntryModal: { bookId: string; entry?: Entry };\r\n};\r\n\r\ntype EditEntryModalNavigationProp = NativeStackNavigationProp<RootStackParamList, 'EditEntryModal'>;\r\ntype EditEntryModalRouteProp = RouteProp<RootStackParamList, 'EditEntryModal'>;\r\n\r\nexport const EditEntryModal: React.FC = () => {\r\n  const navigation = useNavigation<EditEntryModalNavigationProp>();\r\n  const route = useRoute<EditEntryModalRouteProp>();\r\n  const { bookId, entry } = route.params;\r\n  \r\n  const { addEntry, updateEntry } = useEntryStore();\r\n  \r\n  const [pageInput, setPageInput] = useState('');\r\n  const [text, setText] = useState('');\r\n  const [errors, setErrors] = useState<Record<string, string>>({});\r\n\r\n  useEffect(() => {\r\n    if (entry) {\r\n      if (entry.page_start === entry.page_end) {\r\n        setPageInput(entry.page_start.toString());\r\n      } else {\r\n        setPageInput(`${entry.page_start}-${entry.page_end}`);\r\n      }\r\n      setText(entry.text);\r\n    }\r\n  }, [entry]);\r\n\r\n  const validate = () => {\r\n    const newErrors: Record<string, string> = {};\r\n    \r\n    const pageRange = parsePage(pageInput);\r\n    if (!pageRange) {\r\n      newErrors.page = '페이지는 숫자 또는 범위(예: 19-20)로 입력해 주세요';\r\n    }\r\n    \r\n    if (!text.trim()) {\r\n      newErrors.text = '내용을 입력해주세요';\r\n    }\r\n    \r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    if (!validate()) return;\r\n    \r\n    const pageRange = parsePage(pageInput);\r\n    if (!pageRange) return;\r\n    \r\n    try {\r\n      if (entry) {\r\n        await updateEntry(entry.id, {\r\n          page_start: pageRange.start,\r\n          page_end: pageRange.end,\r\n          text: text.trim(),\r\n        });\r\n      } else {\r\n        await addEntry({\r\n          book_id: bookId,\r\n          page_start: pageRange.start,\r\n          page_end: pageRange.end,\r\n          text: text.trim(),\r\n        });\r\n      }\r\n      \r\n      navigation.goBack();\r\n    } catch (error) {\r\n      Alert.alert('오류', '저장에 실패했습니다');\r\n    }\r\n  };\r\n\r\n  const isValid = parsePage(pageInput) !== null && text.trim().length > 0;\r\n\r\n  return (\r\n    <KeyboardAvoidingView\r\n      style={styles.container}\r\n      behavior={Platform.OS === 'ios' ? 'padding' : 'height'}\r\n    >\r\n      <TopBar\r\n        title={entry ? '모음 수정' : '새 모음'}\r\n        leftIcon=\"close\"\r\n        rightIcon={isValid ? \"checkmark\" : undefined}\r\n        onLeftPress={() => navigation.goBack()}\r\n        onRightPress={isValid ? handleSave : undefined}\r\n      />\r\n      \r\n      <ScrollView style={styles.content}>\r\n        <FormField\r\n          label=\"페이지\"\r\n          value={pageInput}\r\n          onChangeText={setPageInput}\r\n          error={errors.page}\r\n          placeholder=\"16 또는 19-20\"\r\n          keyboardType=\"numeric\"\r\n        />\r\n        \r\n        <FormField\r\n          label=\"내용\"\r\n          value={text}\r\n          onChangeText={setText}\r\n          error={errors.text}\r\n          placeholder=\"이 부분에서 느낀 점...\"\r\n          multiline\r\n          numberOfLines={8}\r\n        />\r\n      </ScrollView>\r\n    </KeyboardAvoidingView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: colors.background,\r\n  },\r\n  content: {\r\n    flex: 1,\r\n    padding: 20,\r\n  },\r\n});"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}